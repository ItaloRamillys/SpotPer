--create database SpotPer

/* SpotPer Logico: */

--USE SpotPer

CREATE TABLE GRAVADORA (
    CODIGO_GRAVADORA INTEGER not null,
	CONSTRAINT PK_COD_GRAV PRIMARY KEY (CODIGO_GRAVADORA),
    NOME VARCHAR(30) not null,
    PAIS VARCHAR(30) NOT NULL,
	ESTADO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	RUA VARCHAR(30) NOT NULL,
	NUM_RUA INT,
	HOME_PAGE VARCHAR(30)
);

CREATE TABLE TEL_GRAV(
	TEL_GRAV BIGINT NOT NULL,
	COD_GRAV INTEGER,
	CONSTRAINT PK_TEL_GRAV PRIMARY KEY(TEL_GRAV, COD_GRAV),
	CONSTRAINT FK_COD_GRAV FOREIGN KEY(COD_GRAV) REFERENCES GRAVADORA
	ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE ALBUM (
    ID_ALBUM INTEGER PRIMARY KEY not null,
	NOME_ALBUM VARCHAR(30) NOT NULL,
    DESCRICAO_ALBUM VARCHAR(30),
    PRECO_COMPRA FLOAT not null,
    DATA_GRAVACAO DATE not null,
    DATA_COMPRA DATE not null,
    TIPO_COMPRA SMALLINT not null,
    COD_GRAVADORA INTEGER,
	CONSTRAINT FK_COD_GRAV_IN_ALBUM FOREIGN KEY(COD_GRAVADORA) REFERENCES GRAVADORA
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE COMPOSICAO (
    NOME_COMPO VARCHAR(30) not null,
    DESCRICAO VARCHAR(30),
    COD_COMPOSICAO INTEGER,
	CONSTRAINT PK_COD_COMPOSICAO PRIMARY KEY(COD_COMPOSICAO)
);

CREATE TABLE INTERPRETE (
    NOME VARCHAR(30) not null,
    TIPO VARCHAR(30) not null,
    CODIGO_INTERPRETE INTEGER,
	CONSTRAINT PK_COD_INTERP PRIMARY KEY(CODIGO_INTERPRETE)
);

CREATE TABLE PERIODO_MUSICAL (
    CODIGO_PERIODO INTEGER not null,
    DESCRICAO_PERIODO VARCHAR(30) not null,
    DATA_INICIO DATE NOT NULL,
	DATA_FIM DATE,
	CONSTRAINT PK_COD_PER_MUS PRIMARY KEY(CODIGO_PERIODO) 
);

CREATE TABLE COMPOSITOR (
    CODIGO_COMPOSITOR INTEGER not null,
    NOME_COMPOSITOR VARCHAR(30) not null,
    DATA_MORTE DATE,
    DATA_NASCIMENTO DATE not null,
    COD_PERIODO_MUSICAL INTEGER NOT NULL,
	END_PAIS VARCHAR(30) NOT NULL,
	END_CIDADE VARCHAR(30) NOT NULL,
	CONSTRAINT PK_COD_COMPOSITOR PRIMARY KEY(CODIGO_COMPOSITOR),
	CONSTRAINT FK_PERDIODO FOREIGN KEY (COD_PERIODO_MUSICAL) REFERENCES PERIODO_MUSICAL
	ON DELETE NO ACTION ON UPDATE CASCADE
);


CREATE TABLE FAIXA (
    COD_ALBUM INTEGER not null,
    NUM_FAIXA INTEGER not null,
	NOME_FAIXA VARCHAR(30) NOT NULL,
    constraint pk_faixa_album primary key (COD_ALBUM , NUM_FAIXA),
	TEMPO_EXECUCAO TIME not null,
    TIPO_GRAVACAO SMALLINT
);

CREATE TABLE FAIXA_COMPOSITOR (
    NUM_FAIXA INTEGER not null,
	COD_ALBUM INTEGER NOT NULL,
	COD_COMPOSITOR INTEGER NOT NULL,
    CONSTRAINT PK_TBL_FAIXA_COMPOSITOR 
	PRIMARY KEY(NUM_FAIXA, COD_ALBUM, COD_COMPOSITOR),
	CONSTRAINT FK_FAIXA_IN_F_COMPOSITOR FOREIGN KEY(NUM_FAIXA, COD_ALBUM) REFERENCES FAIXA,
	CONSTRAINT FK_COMPOSITOR_IN_F_COMPOSITOR FOREIGN KEY(COD_COMPOSITOR) REFERENCES COMPOSITOR
);

CREATE TABLE FAIXA_INTERPRETE (
    NUM_FAIXA INTEGER not null,
	COD_ALBUM INTEGER NOT NULL,
	COD_INTERPRETE INTEGER NOT NULL,
    CONSTRAINT PK_TBL_FAIXA_INTERPRETE 
	PRIMARY KEY(NUM_FAIXA, COD_ALBUM, COD_INTERPRETE),
	CONSTRAINT FK_FAIXA_IN_F_INTERPRETE 
	FOREIGN KEY(NUM_FAIXA, COD_ALBUM) REFERENCES FAIXA,
	CONSTRAINT FK_COMPOSITOR_IN_F_INTERPRETE 
	FOREIGN KEY(COD_INTERPRETE) REFERENCES INTERPRETE
);

CREATE TABLE PLAYLIST (
    CODIGO_PLAYLIST INTEGER not null,
    NOME_PLAYLIST VARCHAR(30) not null,
	TEMPO_TOTAL_EXEC TIME,
    DATA_CRIACAO DATE
	CONSTRAINT PK_PLAYLIST PRIMARY KEY (CODIGO_PLAYLIST)
);

CREATE TABLE FAIXA_PLAYLIST (
    COD_PLAYLIST INTEGER not null,
    NUM_FAIXA INTEGER not null,
	COD_ALBUM INTEGER NOT NULL,
	CONSTRAINT PK_TBL_FAIXA_PLAYLIST 
	PRIMARY KEY(NUM_FAIXA, COD_ALBUM, COD_PLAYLIST),
	CONSTRAINT FK_FAIXA_IN_F_PLAYLIST FOREIGN KEY(NUM_FAIXA, COD_ALBUM) REFERENCES FAIXA,
	CONSTRAINT FK_PALYLIST_IN_F_PLAYLIST FOREIGN KEY(COD_PLAYLIST) REFERENCES PLAYLIST
);

CREATE TABLE ALBUM_PLAYLIST (
    COD_PLAYLIST INTEGER not null,
    COD_ALBUM INTEGER NOT NULL,
	CONSTRAINT PK_TBL_ALBUM_PLAYLIST 
	PRIMARY KEY(COD_ALBUM, COD_PLAYLIST),
	CONSTRAINT FK_ALBUM_PLAYLIST FOREIGN KEY(COD_PLAYLIST) REFERENCES PLAYLIST,
	CONSTRAINT FK_ALBUM_IN_A_PLAYLIST FOREIGN KEY(COD_ALBUM) REFERENCES ALBUM
);
 
 
 